---
import GlowEffect from "@/components/GlowEffect.astro"
import { TAGS } from "@/constants.astro"
import type { ui } from "@/i18n/ui"
import { useTranslations } from "@/i18n/utils"
import { Image } from "astro:assets"
import LinkButton from "./LinkButton.astro"
import GitHub from "./icons/GitHub.astro"
import Link from "./icons/Link.astro"

const currentLocale = Astro.currentLocale as keyof typeof ui
const t = useTranslations(currentLocale)

const PROJECTS = [
  {
    title: t("section.projects1.title"),
    description: t("section.projects1.description"),
    link: "https://n-anime-app.vercel.app/",
    github: "https://github.com/JLex11/n-anime-app",
    image: "/projects/one-anime-cut.avif",
    tags: [TAGS.NEXT, TAGS.NODEJS, TAGS.EXPRESSJS, TAGS.POSTGRESQL],
    customClasses: "lg:col-span-7 col-span-1 row-span-1",
  },
  {
    title: t("section.projects2.title"),
    description: t("section.projects2.description"),
    link: "https://ai-chat-six-psi.vercel.app/",
    github: "https://github.com/JLex11/ai-chat",
    image: "/projects/ai-chat.avif",
    tags: [TAGS.ASTROJS, TAGS.LLAMA3, TAGS.TAILWIND],
    customClasses: "lg:col-span-3 col-span-1 row-span-1",
  },
  {
    title: t("section.projects3.title"),
    description: t("section.projects3.description"),
    link: "https://users-dashboard-bay.vercel.app/",
    github: "https://github.com/JLex11/users-dashboard",
    image: "/projects/users-dashboard.avif",
    tags: [TAGS.REACTJS, TAGS.TANSTACK, TAGS.TAILWIND, TAGS.VITEST],
    customClasses: "lg:col-span-4 col-span-1 row-span-1",
  },
]
---

<div class="grid lg:grid-cols-7 grid-cols-1 grid-rows-2 gap-5 relative">
  {
    PROJECTS.map(
      ({ image, title, description, tags, link, github, customClasses }) => (
        <article
          class:list={[
            "ring-1 ring-black/20 dark:ring-white/15 flex flex-col group relative overflow-hidden rounded-xl shadow z-[5] backdrop-blur backdrop-brightness-110 backdrop-saturate-150 min-h-[25rem]",
            customClasses,
          ]}
        >
          <div class="size-full absolute -z-[2] p-2">
            <div class="relative size-full rounded-lg overflow-hidden">
              <Image
                alt={title}
                class="object-cover size-full transition duration-500 group-hover:scale-110 scale-105 object-top"
                loading="lazy"
                decoding="async"
                width={660}
                height={390}
                src={image}
              />
            </div>
          </div>
          <div class="size-[calc(100%-1rem)] inset-0 m-auto rounded-lg absolute -z-[1] dark:gradient-mask-t-20 gradient-mask-t-40 backdrop-blur-sm" />

          <div class="size-[calc(100%-1rem)] inset-0 m-auto p-4 rounded-lg flex flex-col justify-end bg-gradient-to-b from-transparent dark:to-black/70 to-white/80 to-80%">
            <h3 class="text-3xl font-bold dark:text-gray-100 text-white drop-shadow-md">
              {title}
            </h3>
            <div class="flex flex-wrap mt-2">
              <ul class="flex flex-row mb-2 gap-2 flex-wrap max-w-full">
                {tags.map((tag) => (
                  <li>
                    <span
                      class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 text-nowrap`}
                    >
                      <tag.icon class="size-4" />
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>
              <p
                class="opacity-85 dark:text-gray-100 line-clamp-4"
                title={description}
              >
                {description}
              </p>
              <footer class="flex items-end justify-start mt-4 gap-x-4">
                {github && (
                  <LinkButton href={github}>
                    <GitHub class="size-6" />
                    Code
                  </LinkButton>
                )}
                {link && (
                  <LinkButton href={link}>
                    <Link class="size-4" />
                    Preview
                  </LinkButton>
                )}
              </footer>
            </div>
          </div>
        </article>
      )
    )
  }
  <GlowEffect />
</div>
