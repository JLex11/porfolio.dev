---
import { Image } from 'astro:assets'
import GlowEffect from '@/components/GlowEffect.astro'
import ProjectBackground from '@/components/ProjectBackground.astro'
import ProjectFooter from '@/components/ProjectFooter.astro'
import ProjectList from '@/components/ProjectList.astro'

import { TAGS } from '@/constants.astro'

import type { ui } from '@/i18n/ui'
import { useTranslations } from '@/i18n/utils.ts'

import aiChatImg from '@/assets/projects/ai-chat.avif'
import oneAnimeImg from '@/assets/projects/one-anime-cut.avif'
import usersDashboardImg from '@/assets/projects/users-dashboard.avif'

const currentLocale = Astro.currentLocale as keyof typeof ui
const t = useTranslations(currentLocale)

const PROJECTS = [
  {
    title: t('section.projects1.title'),
    description: t('section.projects1.description'),
    links: {
      code: 'https://n-anime-app.vercel.app/',
      github: 'https://github.com/JLex11/n-anime-app',
    },
    images: {
      full: oneAnimeImg,
    },
    bgStyles:
      'bg-gradient-to-bl from-transparent to-[#5b7dbb]/80 to-60% from-30%',
    tags: [TAGS.NEXT, TAGS.NODEJS, TAGS.EXPRESSJS, TAGS.POSTGRESQL],
    styles: 'lg:col-span-7 col-span-1 row-span-1',
  },
  {
    title: t('section.projects2.title'),
    description: t('section.projects2.description'),
    links: {
      code: 'https://ai-chat-six-psi.vercel.app/',
      github: 'https://github.com/JLex11/ai-chat',
    },
    images: {
      full: aiChatImg,
    },
    bgStyles:
      'bg-gradient-to-l from-transparent to-[#202939]/85 to-80% from-10%',
    tags: [TAGS.ASTROJS, TAGS.LLAMA3, TAGS.TAILWIND],
    styles: 'lg:col-span-3 col-span-1 row-span-1',
  },
  {
    title: t('section.projects3.title'),
    description: t('section.projects3.description'),
    links: {
      code: 'https://users-dashboard-bay.vercel.app/',
      github: 'https://github.com/JLex11/users-dashboard',
    },
    images: {
      full: usersDashboardImg,
    },
    bgStyles:
      'bg-gradient-to-bl from-transparent to-[#242424]/95 to-60% from-20%',
    tags: [TAGS.REACTJS, TAGS.TANSTACK, TAGS.TAILWIND, TAGS.VITEST],
    styles: 'lg:col-span-4 col-span-1 row-span-1',
  },
]
---

<div class='grid lg:grid-cols-7 grid-cols-1 grid-rows-2 gap-6 relative'>
  {
    PROJECTS.map(
      ({ images, title, description, tags, links, styles, bgStyles }) => (
        <article
          class:list={[
            'animate-in-view flex flex-col group relative overflow-hidden rounded-xl shadow-md shadow-black/20 z-[5] min-h-[25rem]',
            styles,
          ]}
        >
          <ProjectBackground>
            <Image
              alt={title}
              class='object-cover size-full transition duration-500 group-hover:scale-110 object-top'
              loading='lazy'
              decoding='async'
              width={800}
              height={400}
              src={images.full}
            />
          </ProjectBackground>

          <div
            class:list={[
              'size-full inset-0 m-auto p-4 rounded-lg flex flex-col justify-end gap-y-4',
              bgStyles,
            ]}
          >
            <h3 class='text-3xl font-bold dark:text-gray-100 text-white drop-shadow-md'>
              {title}
            </h3>
            <div class='flex flex-col gap-y-4'>
              <ProjectList tags={tags} />
              <p
                class='opacity-85 dark:text-gray-100 text-white line-clamp-7 max-w-[40ch] overflow-hidden'
                title={description}
              >
                {description}
              </p>
              <ProjectFooter links={links} />
            </div>
          </div>
        </article>
      ),
    )
  }
  <GlowEffect />
</div>
